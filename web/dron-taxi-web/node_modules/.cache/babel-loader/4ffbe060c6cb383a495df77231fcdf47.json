{"ast":null,"code":"import { getCurUsD } from \"./api\";\nconst AUTH = 'AUTH';\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet ath;\nlocalStorage.getItem('id') == null ? ath = true : ath = localStorage.getItem('id');\nlet initialState = {\n  isAuth: ath,\n  userData: []\n};\n\nlet appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AUTH:\n      return { ...state,\n        isAuth: action.isAuth\n      };\n\n    case SET_USER_DATA:\n      return { ...state,\n        userData: action.userData\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setIsAuth = isAuth => {\n  return {\n    type: AUTH,\n    isAuth\n  };\n};\nexport const setUserData = userData => {\n  return {\n    type: SET_USER_DATA,\n    userData\n  };\n};\nexport const setUserDataQ = currentUserId => async dispatch => {\n  let response = await getCurUsD(currentUserId);\n  dispatch(setUserData(response.data));\n};\nexport default appReducer;","map":{"version":3,"sources":["D:/web/AS2020/web/dron-taxi-web/src/state/app-reducer.js"],"names":["getCurUsD","AUTH","SET_USER_DATA","ath","localStorage","getItem","initialState","isAuth","userData","appReducer","state","action","type","setIsAuth","setUserData","setUserDataQ","currentUserId","dispatch","response","data"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,OAAxB;AAEA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,GAAJ;AACCC,YAAY,CAACC,OAAb,CAAqB,IAArB,KAA8B,IAA/B,GAAwCF,GAAG,GAAG,IAA9C,GAAsDA,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAA5D;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAEJ,GADO;AAEfK,EAAAA,QAAQ,EAAE;AAFK,CAAnB;;AAKA,IAAIC,UAAU,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,IAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHH,QAAAA,MAAM,EAAEI,MAAM,CAACJ;AAFZ,OAAP;;AAIJ,SAAKL,aAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,QAAQ,EAAEG,MAAM,CAACH;AAFd,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAZR;AAcH,CAfD;;AAiBA,OAAO,MAAMG,SAAS,GAAIN,MAAD,IAAY;AACjC,SAAO;AACHK,IAAAA,IAAI,EAAEX,IADH;AAEHM,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMO,WAAW,GAAIN,QAAD,IAAc;AACrC,SAAO;AACHI,IAAAA,IAAI,EAAEV,aADH;AAEHM,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMO,YAAY,GAAIC,aAAD,IAAmB,MAAOC,QAAP,IAAoB;AAC/D,MAAIC,QAAQ,GAAG,MAAMlB,SAAS,CAACgB,aAAD,CAA9B;AACAC,EAAAA,QAAQ,CAACH,WAAW,CAACI,QAAQ,CAACC,IAAV,CAAZ,CAAR;AACH,CAHM;AAKP,eAAeV,UAAf","sourcesContent":["import {getCurUsD} from \"./api\";\r\n\r\nconst AUTH = 'AUTH';\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet ath;\r\n(localStorage.getItem('id') == null) ? (ath = true) : ath = localStorage.getItem('id')\r\n\r\nlet initialState = {\r\n    isAuth: ath,\r\n    userData: []\r\n};\r\n\r\nlet appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AUTH:\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            };\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                userData: action.userData\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const setIsAuth = (isAuth) => {\r\n    return {\r\n        type: AUTH,\r\n        isAuth\r\n    }\r\n};\r\n\r\nexport const setUserData = (userData) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        userData\r\n    }\r\n};\r\n\r\nexport const setUserDataQ = (currentUserId) => async (dispatch) => {\r\n    let response = await getCurUsD(currentUserId);\r\n    dispatch(setUserData(response.data))\r\n}\r\n\r\nexport default appReducer;\r\n"]},"metadata":{},"sourceType":"module"}